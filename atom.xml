<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>破窗理论</title>
  
  <subtitle>-Jack·yu-</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-23T11:57:15.706Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yuwenwu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java_开发环境的搭建</title>
    <link href="http://yoursite.com/2020/02/23/java_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/02/23/java_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2020-02-23T11:44:34.000Z</published>
    <updated>2020-02-23T11:57:15.706Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
      <category term="环境" scheme="http://yoursite.com/categories/java/%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="环境" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>Java_简介</title>
    <link href="http://yoursite.com/2020/02/23/Java_%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2020/02/23/Java_%E7%AE%80%E4%BB%8B/</id>
    <published>2020-02-23T11:44:34.000Z</published>
    <updated>2020-02-23T11:52:25.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、什么是Java"><a href="#一、什么是Java" class="headerlink" title="一、什么是Java"></a>一、什么是Java</h1><p>Java是一门<a href="https://baike.baidu.com/item/面向对象" target="_blank" rel="noopener">面向对象</a>编程语言，不仅吸收了<a href="https://baike.baidu.com/item/C%2B%2B" target="_blank" rel="noopener">C++</a>语言的各种优点，还摒弃了C++里难以理解的<a href="https://baike.baidu.com/item/多继承" target="_blank" rel="noopener">多继承</a>、<a href="https://baike.baidu.com/item/指针/2878304" target="_blank" rel="noopener">指针</a>等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程  。</p><p>Java具有简单性、面向对象、<a href="https://baike.baidu.com/item/分布式/19276232" target="_blank" rel="noopener">分布式</a>、<a href="https://baike.baidu.com/item/健壮性/4430133" target="_blank" rel="noopener">健壮性</a>、<a href="https://baike.baidu.com/item/安全性/7664678" target="_blank" rel="noopener">安全性</a>、平台独立与可移植性、<a href="https://baike.baidu.com/item/多线程/1190404" target="_blank" rel="noopener">多线程</a>、动态性等特点  。</p><h1 id="二、Java能干什么"><a href="#二、Java能干什么" class="headerlink" title="二、Java能干什么"></a>二、Java能干什么</h1><p>Java可以编写<a href="https://baike.baidu.com/item/桌面应用程序/2331979" target="_blank" rel="noopener">桌面应用程序</a>、<a href="https://baike.baidu.com/item/Web应用程序" target="_blank" rel="noopener">Web应用程序</a>、<a href="https://baike.baidu.com/item/分布式系统/4905336" target="_blank" rel="noopener">分布式系统</a>和<a href="https://baike.baidu.com/item/嵌入式系统/186978" target="_blank" rel="noopener">嵌入式系统</a>应用程序等 </p><h1 id="三、为什么要学Java"><a href="#三、为什么要学Java" class="headerlink" title="三、为什么要学Java"></a>三、为什么要学Java</h1><p>一门永不过时的编程语言——Java 编程开发。</p><p>Java编程语言占比：</p><p>据官方数据统计，在全球编程语言工程师的数量上，Java编程语言以900万的程序员数量位居首位。 而且很多软件的开发都离不开Java编程，因此其程序员的数量最多。而在以Java编程为核心的开发领域中，javaEE程序员的需求量10年来一直居于首位！</p><p>Java工程师人才缺口：</p><p>根据IDC的统计数字：就2017年来说，我国Java人才的缺口已达42.5万，并且以每年20%左右 的速度增长。在未来5年内,合格软件人才的需求将远大于供给。</p><p>Java工程师就业：</p><p>1.通过各大招聘网站统计，全国海量公司都在招聘Java开发工程师</p><p>2.北京Java开发工程师平均薪资，即18530元</p><p>3.全国Java开发薪资前三：北京 上海 广州</p><h1 id="四、Java学些什么"><a href="#四、Java学些什么" class="headerlink" title="四、Java学些什么"></a>四、Java学些什么</h1><h2 id="1、Java基础"><a href="#1、Java基础" class="headerlink" title="1、Java基础"></a>1、Java基础</h2><p>Java基础课程内容涉及：Java开发介绍、Java数组、Java面向对象、常用基础类、集合、IO流、多线程、异常、网络、反射。</p><p><a href="http://jingyan.baidu.com/album/c1a3101e110864de656deb83.html?picindex=1" target="_blank" rel="noopener"><img src="https://imgsa.baidu.com/exp/w=500/sign=62f250cda251f3dec3b2b964a4eff0ec/314e251f95cad1c858626420723e6709c83d51d8.jpg" alt="Java学习路线（完整详细版）">  </a></p><h3 id="第一部分：Java开发介绍"><a href="#第一部分：Java开发介绍" class="headerlink" title="第一部分：Java开发介绍"></a>第一部分：Java开发介绍</h3><ol><li><p>DOS常用命令</p></li><li><p>JVM、JRE、JDK之间的关系</p></li><li><p>Java开发环境的搭建：安装JDK，配置环境变量</p></li><li><p>Java入门程序（Java的开发流程）</p></li><li><p>Java的注释，标识符、标识符的命名规范</p></li><li><p>Java基本数据类型</p></li><li><p>变量和常量的定义及初始化</p></li><li><p>Java的运算符</p></li></ol><ol start="9"><li><p>运算符的优先级</p></li><li><p>Java分支语句之if…else</p></li><li><p>循环的嵌套</p></li><li><p>方法的定义</p></li><li><p>方法的形参和实参</p></li><li><p>方法的压栈</p></li><li><p>方法的递归调用</p></li></ol><h3 id="第二部分：Java数组"><a href="#第二部分：Java数组" class="headerlink" title="第二部分：Java数组"></a>第二部分：Java数组</h3><ol><li><p>Java 数组的定义</p></li><li><p>Java 数组的声明</p></li><li><p>数组的优势与局限</p></li><li><p>数组的动态初始化</p></li><li><p>数组的存储特点（堆和栈）</p></li><li><p>数组的遍历访问（普通循环，增强for循环）</p></li><li><p>数组元素的顺序查找</p></li><li><p>数组元素的二分法查找</p></li><li><p>数组元素的选择排序</p></li><li><p>数组元素的冒泡法排序</p></li><li><p>Arrays工具类的使用</p></li><li><p>二维数组的介绍</p></li><li><p>二维数组的声明与初始化</p></li><li><p>二维数组的遍历</p></li><li><p>二维数组的使用</p></li></ol><h3 id="第三部分：Java面向对象"><a href="#第三部分：Java面向对象" class="headerlink" title="第三部分：Java面向对象"></a>第三部分：Java面向对象</h3><ol><li><p>面向对象设计思想</p></li><li><p>面向对象的分析与设计</p></li><li><p>Java与面向对象</p></li><li><p>类中成员变量的定义与意义</p></li><li><p>构造方法的定义和调用</p></li><li><p>面向对象的封装特性</p></li><li><p>局部变量和成员变量的作用域问题</p></li><li><p>静态属性、静态方法、静态代码块</p></li><li><p>面向对象的继承特性</p></li><li><p>继承中构造方法的细节</p></li><li><p>面向对象的多态特性</p></li><li><p>抽象方法与抽象类</p></li><li><p>接口的介绍</p></li><li><p>通过内部类制作性能检测工具</p></li><li><p>Java的内存分析</p></li></ol><h3 id="第四部分：常用基础类"><a href="#第四部分：常用基础类" class="headerlink" title="第四部分：常用基础类"></a>第四部分：常用基础类</h3><ol><li><p>枚举类型介绍</p></li><li><p>枚举的定义</p></li><li><p>结合switch-case使用枚举</p></li><li><p>String字符串</p></li><li><p>字符串缓冲区StringBuffer和StringBuilder</p></li><li><p>字符串与缓冲区的区别</p></li><li><p>基本类型的包装类型</p></li><li><p>Date类的使用</p></li><li><p>SimpleDateFormat类的使用</p></li><li><p>Math类的使用</p></li><li><p>Random类的使用</p></li><li><p>Runtime类的使用</p></li><li><p>System 类的使用</p></li><li><p>Calendar类的使用</p></li><li><p>Java8新特性</p></li></ol><h3 id="第五部分：集合"><a href="#第五部分：集合" class="headerlink" title="第五部分：集合"></a>第五部分：集合</h3><ol><li><p>集合的概念和作用</p></li><li><p>集合和数组的区别</p></li><li><p>集合框架体系介绍</p></li><li><p>集合框架之Collection接口</p></li><li><p>泛型的使用</p></li><li><p>ArrayList和LinkedList的方法使用</p></li><li><p>ArrayList和LinkedList各自的工作原理分析原理分析</p></li><li><p>Vector和Stack使用介绍</p></li><li><p>使用多种方式遍历集合</p></li><li><p>迭代器的使用和工作原理</p></li><li><p>HashSet和LinkedHashSet各自的工作原理分析</p></li><li><p>集合框架之Map接口</p></li><li><p>TreeMap的方法使用和排序方式</p></li><li><p>分析Set和Map之间的区别与联系</p></li><li><p>Collections工具类的使用</p></li></ol><h3 id="第六部分：IO流"><a href="#第六部分：IO流" class="headerlink" title="第六部分：IO流"></a>第六部分：IO流</h3><ol><li><p>File类的作用</p></li><li><p>File类中常用方法的使用介绍</p></li><li><p>使用File类操作文件和文件夹</p></li><li><p>相对路径和绝对路径的介绍</p></li><li><p>IO流的概念和工作原理</p></li><li><p>IO流的分类</p></li><li><p>文件流的使用</p></li><li><p>转换流的使用</p></li><li><p>缓冲流的使用</p></li><li><p>对象流的使用</p></li><li><p>内存流的使用</p></li><li><p>使用不同的流实现文件内容的拷贝</p></li><li><p>RandomAccessFile类的使用</p></li><li><p>Properties类的使用</p></li><li><p>装饰者设计模式</p></li></ol><h3 id="第七部分：多线程"><a href="#第七部分：多线程" class="headerlink" title="第七部分：多线程"></a>第七部分：多线程</h3><ol><li><p>进程和线程的介绍</p></li><li><p>进程和线程之间的区别与联系</p></li><li><p>线程实现方式之继承自Thread类</p></li><li><p>线程实现方式之实现Runnable接口</p></li><li><p>线程实现方式之线程池</p></li><li><p>线程的生命周期</p></li><li><p>线程中常用方法的使用</p></li><li><p>多线程中的临界资源问题分析</p></li><li><p>解决临界资源问题之同步代码块</p></li><li><p>解决临界资源问题之同步方法</p></li><li><p>解决临界资源问题之ReentrantLock</p></li><li><p>多线程讲解和理解</p></li><li><p>多线程在单例中的应用</p></li><li><p>死锁介绍以及案例演示</p></li><li><p>生产者与消费者设计模式</p></li></ol><h3 id="第八部分：异常"><a href="#第八部分：异常" class="headerlink" title="第八部分：异常"></a>第八部分：异常</h3><ol><li><p>异常的概念</p></li><li><p>异常的分类</p></li><li><p>异常的理解</p></li><li><p>常见异常介绍</p></li><li><p>运行时异常</p></li><li><p>编译时异常</p></li><li><p>运行和编译异常区别</p></li><li><p>异常的处理方式之捕获异常</p></li><li><p>异常的处理方式之抛出异常</p></li><li><p>异常的处理方式之断点调试</p></li><li><p>断点调试之引导运行步骤</p></li><li><p>自定义异常</p></li><li><p>异常关键字处理</p></li><li><p>关键字执行流程</p></li><li><p>异常总结</p></li></ol><h3 id="第九部分：网络"><a href="#第九部分：网络" class="headerlink" title="第九部分：网络"></a>第九部分：网络</h3><ol><li><p>计算机网络和网络编程</p></li><li><p>网络编程与网页编程的区别</p></li><li><p>IP地址和端口号的介绍</p></li><li><p>网络通信协议的介绍</p></li><li><p>InetAddress类的方法使用</p></li><li><p>Socket通信模型的介绍</p></li><li><p>使用UDP实现数据的发送和接收</p></li><li><p>使用TCP实现数据的发送和接收</p></li><li><p>使用TCP实现文件的上传和下载</p></li><li><p>使用TCP实现多人聊天</p></li><li><p>URL和URLConnection使用介绍</p></li><li><p>URLEncoder和URLDecoder的使用介绍</p></li><li><p>基于HTTP协议访问网络资源</p></li><li><p>Json解析</p></li><li><p>基于HTTP协议实现网络文件的下载</p></li></ol><h3 id="第十部分：反射"><a href="#第十部分：反射" class="headerlink" title="第十部分：反射"></a>第十部分：反射</h3><ol><li><p>反射机制的概念</p></li><li><p>反射机制的作用</p></li><li><p>反射机制的理解</p></li><li><p>Class类的使用</p></li><li><p>Class文件获取的三种方式</p></li><li><p>获取Constructor对象</p></li><li><p>获取私有Constructor对象</p></li><li><p>获取Method对象</p></li><li><p>获取私有Method对象</p></li><li><p>Constructor的使用</p></li><li><p>Method类的使用</p></li><li><p>Field类的使用</p></li><li><p>Modifier类的介绍</p></li><li><p>反射使用练习</p></li><li><p>反射机制在工厂设计模式中的应用</p></li></ol><h2 id="2、JavaWeb课程"><a href="#2、JavaWeb课程" class="headerlink" title="2、JavaWeb课程"></a>2、JavaWeb课程</h2><p>JavaWeb课程内容涉及：HTML5课程、CSS3、JavaScript、MySQL使用、JDBC连接池、Servlet、JSP、AJAX、jQuery、Bootstrap。</p><p><a href="http://jingyan.baidu.com/album/c1a3101e110864de656deb83.html?picindex=2" target="_blank" rel="noopener"><img src="https://imgsa.baidu.com/exp/w=500/sign=13632fbcab1ea8d38a227404a70b30cf/dcc451da81cb39db9664ff51dd160924ab183014.jpg" alt="Java学习路线（完整详细版）"></a></p><h3 id="第一部分：HTML5"><a href="#第一部分：HTML5" class="headerlink" title="第一部分：HTML5"></a>第一部分：HTML5</h3><ol><li><p>html概述</p></li><li><p>html基本标签</p></li><li><p>图片标签</p></li><li><p>超链接标签</p></li><li><p>表格标签</p></li><li><p>无序列表标签</p></li><li><p>有序列表标签</p></li><li><p>定义列表标签</p></li><li><p>div标签</p></li><li><p>语义化标签</p></li><li><p>表单标签</p></li><li><p>语义化表单元素</p></li><li><p>框架标签</p></li><li><p>特殊字符</p></li><li><p>综合案例</p></li></ol><h3 id="第二部分：CSS3"><a href="#第二部分：CSS3" class="headerlink" title="第二部分：CSS3"></a>第二部分：CSS3</h3><ol><li><p>CSS3简介和用途</p></li><li><p>CSS3书写规范</p></li><li><p>CSS3基本语法</p></li><li><p>CSS3三种使用方式</p></li><li><p>标签选择器</p></li><li><p>Id选择器</p></li><li><p>Class选择器</p></li><li><p>属性选择器</p></li><li><p>层次选择器</p></li><li><p>文字、文本属性</p></li><li><p>背景、列表属性</p></li><li><p>尺寸、显示、轮廓属性</p></li><li><p>浮动、定位属性</p></li><li><p>盒子模型</p></li><li><p>CSS3高级属性</p></li></ol><h3 id="第三部分：JavaScript"><a href="#第三部分：JavaScript" class="headerlink" title="第三部分：JavaScript"></a>第三部分：JavaScript</h3><ol><li><p>JavaScript概述</p></li><li><p>JavaScript发展史</p></li><li><p>JavaScript组成</p></li><li><p>数据类型</p></li><li><p>运算符</p></li><li><p>分支语句</p></li><li><p>循环语句</p></li><li><p>系统函数、自定义函数、匿名函数</p></li><li><p>常见事件</p></li><li><p>数组、字符串、日期对象</p></li><li><p>正则表达式</p></li><li><p>BOM对象：window、history、location</p></li><li><p>DOM概念</p></li><li><p>DOM操作：创建、修改内容、删除</p></li><li><p>Css样式操作</p></li></ol><h3 id="第四部分：MySQL使用"><a href="#第四部分：MySQL使用" class="headerlink" title="第四部分：MySQL使用"></a>第四部分：MySQL使用</h3><ol><li><p>数据库简介</p></li><li><p>MySQL的安装与使用</p></li><li><p>MySQL客户端和服务器配置</p></li><li><p>用户权限管理</p></li><li><p>DDL创建数据库和表</p></li><li><p>约束与外键</p></li><li><p>DML实现添加、修改、删除数据</p></li><li><p>聚合函数、日期函数等</p></li><li><p>DQL简单查询</p></li><li><p>排序、分组、筛选</p></li><li><p>多表查询</p></li><li><p>子查询</p></li><li><p>in和exists关键字</p></li><li><p>分页查询</p></li><li><p>Mysql SQL语句优化介绍</p></li></ol><h3 id="第五部分：JDBC连接池"><a href="#第五部分：JDBC连接池" class="headerlink" title="第五部分：JDBC连接池"></a>第五部分：JDBC连接池</h3><ol><li><p>JDBC概述</p></li><li><p>JDBC使用步骤</p></li><li><p>Connection、Statement、ResultSet接口</p></li><li><p>使用JDBC 完成数据库DML操作</p></li><li><p>PreparedStatement对象</p></li><li><p>大数据的操作</p></li><li><p>批量处理与元数据</p></li><li><p>事务处理</p></li><li><p>隔离级别</p></li><li><p>自定义连接池</p></li><li><p>DBCP、C3p0连接池</p></li><li><p>DBUtis工具类</p></li><li><p>QueryRunner</p></li><li><p>自定义结果集处理</p></li><li><p>连接池知识总结</p></li></ol><h3 id="第六部分：Servlet"><a href="#第六部分：Servlet" class="headerlink" title="第六部分：Servlet"></a>第六部分：Servlet</h3><ol><li><p>Tomcat与Eclipse的集成开发</p></li><li><p>什么是Servlet</p></li><li><p>Servlet的进化史</p></li><li><p>Servlet的优化过程</p></li><li><p>Servlet中应用的多线程概念</p></li><li><p>Servlet接收客户端请求信息</p></li><li><p>Servlet响应客户端信息</p></li><li><p>Servlet的生命周期</p></li><li><p>重定向写法</p></li><li><p>转发写法</p></li><li><p>转发和重定向区别</p></li><li><p>HttpServletRequest获取中文乱码问题</p></li><li><p>HttpServletResponse响应中文乱码问题</p></li><li><p>Servlet路径映射问题</p></li><li><p>Servlet多路径映射</p></li></ol><h3 id="第七部分：JSP"><a href="#第七部分：JSP" class="headerlink" title="第七部分：JSP"></a>第七部分：JSP</h3><ol><li><p>什么是JSP</p></li><li><p>JSP的内置对象</p></li><li><p>透析JSP的本质</p></li><li><p>JSTL+EL</p></li><li><p>MVC介绍</p></li><li><p>分层的重要性</p></li><li><p>Web工程中事务实现</p></li><li><p>Session的使用</p></li><li><p>Cookie的使用</p></li><li><p>web工程中连接池的使用</p></li><li><p>实现用户的自动登录</p></li><li><p>文件的上传、下载</p></li><li><p>过滤器、 监听器</p></li><li><p>反射、注解、泛型</p></li></ol><h3 id="第八部分：AJAX"><a href="#第八部分：AJAX" class="headerlink" title="第八部分：AJAX"></a>第八部分：AJAX</h3><ol><li><p>Ajax技术背景</p></li><li><p>Ajax技术的理解</p></li><li><p>XMLHttpRequest使用步骤</p></li><li><p>XMLHttpRequest GET/POST的区别</p></li><li><p>同步请求&amp;异步请求</p></li><li><p>同步请求&amp;异步请求的区别</p></li><li><p>Ajax获取不同的返回值类型</p></li><li><p>Ajax使用原生JavaScript和Jquery的区别</p></li><li><p>Ajax响应状态处理</p></li><li><p>JSON语法</p></li><li><p>Java JSON 解析</p></li><li><p>Java JSON 生成</p></li><li><p>Java JSON 第三方工具快速解析</p></li><li><p>JavaScript JSON转换</p></li><li><p>Jquery JSON转换</p></li></ol><h3 id="第九部分：jQuery"><a href="#第九部分：jQuery" class="headerlink" title="第九部分：jQuery"></a>第九部分：jQuery</h3><ol><li><p>jQuery介绍</p></li><li><p>jQuery版本介绍</p></li><li><p>jQuery对象和原生js对象介绍</p></li><li><p>jQuery对象和原生js对象互相转化</p></li><li><p>jQuery快速入门</p></li><li><p>jQuery语法详解</p></li><li><p>jQuery核心函数</p></li><li><p>jQuery onload处理</p></li><li><p>jQuery选择器</p></li><li><p>jQuery 文档处理</p></li><li><p>jQuery事件</p></li><li><p>jQuery遍历操作</p></li><li><p>jQuery自定义函数</p></li><li><p>jQuery动画效果</p></li><li><p>jQueryAJAX操作</p></li></ol><h3 id="第十部分：Bootstrap"><a href="#第十部分：Bootstrap" class="headerlink" title="第十部分：Bootstrap"></a>第十部分：Bootstrap</h3><ol><li><p>Bootstrap介绍</p></li><li><p>Bootstrap开发环境搭建</p></li><li><p>Bootstrap的基本模板</p></li><li><p>Bootstrap快速入门</p></li><li><p>Bootstrap组成</p></li><li><p>栅格系统</p></li><li><p>利用栅格系统进行移动端页面适配</p></li><li><p>Bootstrap全局Css样式</p></li><li><p>Bootstrap修改原Css样式进行自定义</p></li><li><p>Bootstrap的js组件</p></li><li><p>Bootstrap的js组件样式修改</p></li><li><p>集成Bootstrapjs插件之导航条</p></li><li><p>集成Bootstrapjs插件之轮播图</p></li><li><p>集成Bootstrapjs插件之弹出框</p></li><li><p>Bootstrap进行项目整合</p></li></ol><h2 id="3、Java框架课程"><a href="#3、Java框架课程" class="headerlink" title="3、Java框架课程"></a>3、Java框架课程</h2><p>Java框架课程内容涉及：Maven、Hibernate、Spring、Spring MVC、MyBatis、WebService、SVN、Activiti。</p><p><a href="http://jingyan.baidu.com/album/c1a3101e110864de656deb83.html?picindex=3" target="_blank" rel="noopener"><img src="https://imgsa.baidu.com/exp/w=500/sign=357c043641086e066aa83f4b32097b5a/f31fbe096b63f624e685a1048a44ebf81b4ca3d9.jpg" alt="Java学习路线（完整详细版）"></a></p><h3 id="第一部分：Maven"><a href="#第一部分：Maven" class="headerlink" title="第一部分：Maven"></a>第一部分：Maven</h3><ol><li><p>Maven环境搭建</p></li><li><p>Maven构建项目</p></li><li><p>Maven本地仓库配置</p></li><li><p>Maven中央仓库配置</p></li><li><p>Maven基本概念</p></li><li><p>Maven基本命令介绍</p></li><li><p>Maven于Eclipse整合</p></li><li><p>Maven于Idea整合</p></li><li><p>Maven创建web工程</p></li><li><p>pom.xml、依赖管理</p></li><li><p>坐标、依赖、生命周期等</p></li><li><p>Eclipse下的Maven使用</p></li><li><p>Maven中 继承、聚合</p></li><li><p>Maven构建SSH/SSM应用</p></li><li><p>自动部署、持续集成、持续部署</p></li></ol><h3 id="第二部分：Hibernate"><a href="#第二部分：Hibernate" class="headerlink" title="第二部分：Hibernate"></a>第二部分：Hibernate</h3><ol><li><p>Hibernate框架介绍</p></li><li><p>Hibernate于其他框架和DBUtil工具类对比</p></li><li><p>ORM思想</p></li><li><p>Hibernate5与JPA关系介绍</p></li><li><p>Hibernate.cfg.xml配置</p></li><li><p>hbm.xml映射文件详解</p></li><li><p>主键生成策略 PO对象三种状态分析与切换</p></li><li><p>Hibernate5一级缓存分析与测试</p></li><li><p>Hibernate5高级映射技术</p></li><li><p>一对多映射</p></li><li><p>多对多映射</p></li><li><p>Hibernate5多表联合查询</p></li><li><p>Hibernate5延迟加载</p></li><li><p>Hibernate5加载策略</p></li><li><p>二级缓存</p></li></ol><h3 id="第三部分：Spring"><a href="#第三部分：Spring" class="headerlink" title="第三部分：Spring"></a>第三部分：Spring</h3><ol><li><p>框架原理介绍</p></li><li><p>框架环境搭建</p></li><li><p>快速入门</p></li><li><p>创建Bean的方式及实现原理</p></li><li><p>Bean种类</p></li><li><p>Bean生命周期</p></li><li><p>Bean的作用域</p></li><li><p>Bean的注值方式</p></li><li><p>SpEL</p></li><li><p>整合Junit测试</p></li><li><p>Web项目集成Spring</p></li><li><p>注解装配Bean</p></li><li><p>AOP思想、原理解剖</p></li><li><p>传统方式实现AOP开发</p></li><li><p>AspectJ介绍及实现AOP开发</p></li></ol><h3 id="第四部分：Spring-MVC"><a href="#第四部分：Spring-MVC" class="headerlink" title="第四部分：Spring MVC"></a>第四部分：Spring MVC</h3><ol><li><p>Spring MVC 概述</p></li><li><p>使用 @RequestMapping映射请求</p></li><li><p>请求处理方法签名概述</p></li><li><p>处理方法签名详细说明</p></li><li><p>使用 HttpMessageConverter</p></li><li><p>处理模型数据</p></li><li><p>数据绑定流程剖析</p></li><li><p>数据格式化</p></li><li><p>数据校验</p></li><li><p>视图和视图解析器</p></li><li><p>处理方法的数据绑定</p></li><li><p>视图和视图解析器</p></li><li><p>文件上传下载</p></li><li><p>JSON处理</p></li><li><p>拦截器</p></li></ol><h3 id="第五部分：MyBatis"><a href="#第五部分：MyBatis" class="headerlink" title="第五部分：MyBatis"></a>第五部分：MyBatis</h3><ol><li><p>MyBatis数据框架介绍</p></li><li><p>MyBatis对比Hibernate框架</p></li><li><p>MyBatis配置、查询数据</p></li><li><p>MyBatis全局配置文件</p></li><li><p>MyBatis全局配置文件元素详细介绍</p></li><li><p>Mapper映射文件</p></li><li><p>MyBatis两种开发方式</p></li><li><p>MyBatis中别名配置</p></li><li><p>MyBatis # 和 $ 拼接参数区别</p></li><li><p>关联查询，动态sql</p></li><li><p>MyBatis缓存机制、整合ehcache</p></li><li><p>MyBatis二级缓存处理</p></li><li><p>MyBatis、Spring、SpringMVC整合</p></li><li><p>分页插件</p></li><li><p>MyBatis逆向工程</p></li></ol><h3 id="第六部分：WebService"><a href="#第六部分：WebService" class="headerlink" title="第六部分：WebService"></a>第六部分：WebService</h3><ol><li><p>WebService简介</p></li><li><p>WebService主流框架</p></li><li><p>SOAP协议</p></li><li><p>WSDL讲解</p></li><li><p>JAX-WS</p></li><li><p>WebService与Spring整合</p></li><li><p>JAXB</p></li><li><p>JAX-RS</p></li><li><p>WebService各种调用方式</p></li><li><p>cxf的介绍</p></li><li><p>cxf+jaxws基本</p></li><li><p>cxf+jaxws+spring</p></li><li><p>cxf+JAX-RS基本</p></li><li><p>cxf+JAX-RS+spring</p></li></ol><h3 id="第七部分：SVN"><a href="#第七部分：SVN" class="headerlink" title="第七部分：SVN"></a>第七部分：SVN</h3><ol><li><p>SVN简介</p></li><li><p>SVN和Git对比</p></li><li><p>SVN服务器搭建</p></li><li><p>SVN创建仓库</p></li><li><p>SVN创建用户以及分配权限</p></li><li><p>SVN签出、提交、更新</p></li><li><p>Eclipse整合svn插件</p></li><li><p>Idea整合svn插件</p></li><li><p>使用SVN更新提交</p></li><li><p>SVN仓库分析</p></li><li><p>SVN协同修改&amp;冲突解决</p></li><li><p>SVN代码整合注意事项</p></li><li><p>SVN权限管理</p></li><li><p>SVN数据回滚</p></li><li><p>TortoiseSVN</p></li></ol><h3 id="第八部分：Activiti"><a href="#第八部分：Activiti" class="headerlink" title="第八部分：Activiti"></a>第八部分：Activiti</h3><ol><li><p>工作流介绍</p></li><li><p>工作流引擎</p></li><li><p>工作流使用步骤</p></li><li><p>BPMN2.0规范</p></li><li><p>Activiti5框架表结构</p></li><li><p>Activiti5核心组件&amp;服务接口</p></li><li><p>Activiti5插件安装&amp;整合Spring</p></li><li><p>流程定义</p></li><li><p>流程实例、任务、历史</p></li><li><p>任务领取、流程变量</p></li><li><p>排他网关、并行网关</p></li><li><p>流程事件</p></li><li><p>流程控制</p></li><li><p>监听器</p></li><li><p>简单整合shiro</p></li></ol><h2 id="4、Java-云数据课程"><a href="#4、Java-云数据课程" class="headerlink" title="4、Java + 云数据课程"></a>4、Java + 云数据课程</h2><p>Java + 云数据课程主要涉及的内容包含：Linux、FastDFS、MySQL优化、Nginx反向代理、Quartz 作业调度、Redis 高性能(Key-Value)数据库、Shiro 安全(权限)框架、Lucene&amp;Solr全文检索、Zookeeper 分布式系统、MyCAT 大数据集群、Dubbo实现分布式架构、ActiveMQ 消息队列、分布式事务和单点登录、分布式框架原理(采用视频资料教学)、基于SpringMVC的集成单元测试MockMVC、SpringBoot 快速构建JavaEE项目。</p><p><a href="http://jingyan.baidu.com/album/c1a3101e110864de656deb83.html?picindex=4" target="_blank" rel="noopener"><img src="https://imgsa.baidu.com/exp/w=500/sign=eba9c015424a20a4311e3cc7a0539847/342ac65c10385343534d1f269e13b07eca808833.jpg" alt="Java学习路线（完整详细版）"></a></p><h3 id="第一部分：Linux版本"><a href="#第一部分：Linux版本" class="headerlink" title="第一部分：Linux版本"></a>第一部分：Linux版本</h3><p>1.Linux简介和安装</p><p>2.Linux和Windows的区别</p><p>3.Linux远程登录</p><p>4.Linux常用命令</p><p>5.Linux文件管理</p><p>6.Linux用户管理</p><p>7.Linux用户组管理</p><p>8.Linux磁盘管理</p><p>9.Linux系统管理</p><p>10.Linux常用文件</p><p>11.Linux JDK安装</p><p>12.Linux Tomcat安装</p><p>13.Linux MySQL安装</p><h3 id="第二部分：FastDFS"><a href="#第二部分：FastDFS" class="headerlink" title="第二部分：FastDFS"></a>第二部分：FastDFS</h3><p>1.FastDFS简介</p><p>2.FastDFS单节点安装</p><p>3.FastDFS Tracker和Storage节点操作</p><p>4.FastDFS 配置Tracker服务器</p><p>5.FastDFS 配置Storage服务器</p><p>6.FastDFS JavaClient端 文件上传</p><p>7.FastDFS JavaClient端 文件下载</p><h3 id="第三部分：MySQL优化"><a href="#第三部分：MySQL优化" class="headerlink" title="第三部分：MySQL优化"></a>第三部分：MySQL优化</h3><p>1.优化数据访问</p><p>2.重构查询的方式</p><p>3.查询缓存</p><p>4.切分查询</p><p>5.MySQL索引</p><p>6.MySQL锁</p><p>7.MySQL执行计划</p><p>8.MySQL存储引擎</p><p>9.Schema与数据类型优化</p><h3 id="第四部分：Nginx反向代理"><a href="#第四部分：Nginx反向代理" class="headerlink" title="第四部分：Nginx反向代理"></a>第四部分：Nginx反向代理</h3><p>1.Nginx反向代理介绍</p><p>2.Nginx 下载和安装</p><p>3.Nginx 编译和启动、访问</p><p>4.在Linux下搭建Nginx集群</p><p>5.在Windows搭建Nginx集群</p><p>6.解决Session共享问题</p><h3 id="第五部分：Quartz-作业调度"><a href="#第五部分：Quartz-作业调度" class="headerlink" title="第五部分：Quartz 作业调度"></a>第五部分：Quartz 作业调度</h3><p>1.Quartz作业调度简介</p><p>2.Quartz作业调度执行以及持久性</p><p>3.Quartz基本使用</p><p>4.Quartz核心类讲解</p><p>5.Quartz Trigger 触发器</p><p>6.Quartz Job&amp;JobDetail</p><p>7.Quartz Calendars日历讲解</p><p>8.JobListener监听器和TriggerListener监听器</p><p>9.Spring整合Quartz</p><h3 id="第六部分：Redis-高性能-Key-Value-数据库"><a href="#第六部分：Redis-高性能-Key-Value-数据库" class="headerlink" title="第六部分：Redis 高性能(Key-Value)数据库"></a>第六部分：Redis 高性能(Key-Value)数据库</h3><p>1.NoSQL 发展史简介</p><p>2.Redis 简介</p><p>3.Redis 安装以及调试</p><p>4.Redis 常用指令</p><p>5.Redis 高级使用(主从复制、哨兵模式、持久化机制)</p><p>6.Jedis的基本使用</p><p>7.SSM框架基于Redis实现缓存</p><p>8Redis 连接单机版</p><p>9.Redis 连接单机版使用连接池</p><p>10.封装和整合Spring</p><p>11.Redis 集群搭建</p><h3 id="第七部分：Shiro-安全-权限-框架"><a href="#第七部分：Shiro-安全-权限-框架" class="headerlink" title="第七部分：Shiro 安全(权限)框架"></a>第七部分：Shiro 安全(权限)框架</h3><p>1.Shiro功能简介</p><p>2.Shiro框架介绍</p><p>3.ShiroFilter工作原理</p><p>4.Shiro 身份认证</p><p>5.Shiro Realm以及Authenticator</p><p>6.Shiro拦截器和Permissions(授权)</p><p>7.Shiro 自定义拦截器</p><p>8.Shiro Session会话</p><p>9.Shiro RememberMe功能</p><p>10.SSM集成Shiro综合权限菜单</p><h3 id="第八部分：Lucene-amp-Solr全文检索"><a href="#第八部分：Lucene-amp-Solr全文检索" class="headerlink" title="第八部分：Lucene&amp;Solr全文检索"></a>第八部分：Lucene&amp;Solr全文检索</h3><p>1.Lucene 搜索引擎介绍</p><p>2.Lucene 中文分词器配置</p><p>3.Lucene 索引的维护包括创建、删除、修改操作</p><p>4.Lucene Query 各种查询方法</p><p>5.Lucene 高亮显示</p><p>6.Lucene Facet分面检索</p><p>7.Solr简介</p><p>8.Solr 安装和配置</p><p>9.Solr 索引库管理</p><p>10.什么是SolrCloud</p><p>11.Solr集群的系统架构</p><p>12.将搜索功能切换到集群版</p><h3 id="第九部分：Zookeeper-分布式系统"><a href="#第九部分：Zookeeper-分布式系统" class="headerlink" title="第九部分：Zookeeper 分布式系统"></a>第九部分：Zookeeper 分布式系统</h3><p>1.Zookeeper 简介</p><p>2.Zookeeper 特点</p><p>3.Zookeeper 安装和配置</p><p>4.Zookeeper数据类型</p><p>5.Zookeeper服务中操作</p><p>6.Zookeeper Wacth触发器</p><p>7.Zookeeper分布式应用</p><h3 id="第十部分：MyCAT-大数据集群"><a href="#第十部分：MyCAT-大数据集群" class="headerlink" title="第十部分：MyCAT 大数据集群"></a>第十部分：MyCAT 大数据集群</h3><p>1.MyCat 简介</p><p>2.MyCat的下载和安装</p><p>3.MyCat分片配置</p><p>4.MyCat分片使用和测试</p><p>5.MyCat读写分离</p><p>6.MyCat 实现从MySQL主从复制</p><h3 id="第十一部分：Dubbo实现分布式架构"><a href="#第十一部分：Dubbo实现分布式架构" class="headerlink" title="第十一部分：Dubbo实现分布式架构"></a>第十一部分：Dubbo实现分布式架构</h3><p>1.Dubbo简介</p><p>2.单一应用框架</p><p>3.垂直应用框架</p><p>4.分布式应用框架</p><p>5.流动计算机架构</p><p>6.Dubbo 能做什么</p><p>7.Dubbo 实现原理</p><p>8.Dubbo 分布式集群模型</p><p>9.Dubbo管理控制台安装</p><p>10.Dubbo 集成 SSM</p><h3 id="第十二部分：ActiveMQ-消息队列"><a href="#第十二部分：ActiveMQ-消息队列" class="headerlink" title="第十二部分：ActiveMQ 消息队列"></a>第十二部分：ActiveMQ 消息队列</h3><p>1.ActiveMQ简介</p><p>2.JMS简介</p><p>3.MQ 消息中间件</p><p>4.ActiveMQ 安装和使用</p><p>5.ActiveMQ 消息过滤</p><p>6.ActiveMQ 消息发布和订阅模式</p><p>7.ActiveMQ消息持久化</p><p>8.ActiveMQ与Spring 整合</p><h3 id="第十三部分：分布式事务和单点登录"><a href="#第十三部分：分布式事务和单点登录" class="headerlink" title="第十三部分：分布式事务和单点登录"></a>第十三部分：分布式事务和单点登录</h3><p>1.阶段提交协议讲解</p><p>2.使用消息队列来避免分布式事务</p><p>3.如何可靠保存凭证</p><p>4.业务与消息解耦方式</p><p>5.如何解决消息重复投递的问题</p><p>6.什么是单点登录</p><p>7.单点登录技术的实现机制</p><h3 id="第十四部分：分布式框架原理-采用视频资料教学"><a href="#第十四部分：分布式框架原理-采用视频资料教学" class="headerlink" title="第十四部分：分布式框架原理(采用视频资料教学)"></a>第十四部分：分布式框架原理(采用视频资料教学)</h3><p>1.传统垂直mvc项目</p><p>2.垂直架构的缺点</p><p>3.RPC架构</p><p>4.RPC架构的核心技术点</p><p>5.RPC架构的问题</p><p>6.SOA服务化架构</p><p>7.框架设计原理</p><p>8.框架性能、可靠性、功能</p><p>9.协议栈(通信模型、协议消息定义、安全性设计)</p><p>10.服务路由</p><p>11.集群容错</p><h3 id="第十五部分：基于SpringMVC的集成单元测试MockMVC"><a href="#第十五部分：基于SpringMVC的集成单元测试MockMVC" class="headerlink" title="第十五部分：基于SpringMVC的集成单元测试MockMVC"></a>第十五部分：基于SpringMVC的集成单元测试MockMVC</h3><p>1.Mock测试框架的介绍</p><p>2.SpringMVC Mock 配置的步骤</p><p>3.基于SpringMVC单元测试实战案例</p><p>4.基于SpringMVC+JPA单元测试实战案例</p><h3 id="第十六部分：SpringBoot-快速构建JavaEE项目"><a href="#第十六部分：SpringBoot-快速构建JavaEE项目" class="headerlink" title="第十六部分：SpringBoot 快速构建JavaEE项目"></a>第十六部分：SpringBoot 快速构建JavaEE项目</h3><p>1.基于SpringBoot 的thymeleaf 模板引擎</p><p>2.基于SpringBoot 多模块实战开发</p><p>3.基于SpringBoot 文件上传</p><p>4.基于SpringBoot Data Solr搜索引擎开发</p><p>5.基于SpringBoot Email邮件发送</p><p>6.基于SpringBoot 的Redis实战开发</p><p>7.基于SpringBoot 的WebSocket实战开发</p><p>8.基于SpringBoot 的ActiveMQ消息队列</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、什么是Java&quot;&gt;&lt;a href=&quot;#一、什么是Java&quot; class=&quot;headerlink&quot; title=&quot;一、什么是Java&quot;&gt;&lt;/a&gt;一、什么是Java&lt;/h1&gt;&lt;p&gt;Java是一门&lt;a href=&quot;https://baike.baidu.com/it
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="简介" scheme="http://yoursite.com/tags/%E7%AE%80%E4%BB%8B/"/>
    
  </entry>
  
  <entry>
    <title>Docker_搭建ftp服务器</title>
    <link href="http://yoursite.com/2020/02/22/docker_%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2020/02/22/docker_%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-02-22T15:31:11.000Z</published>
    <updated>2020-02-23T11:57:31.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="1、安装了docker-io或者docker-ce"><a href="#1、安装了docker-io或者docker-ce" class="headerlink" title="1、安装了docker-io或者docker-ce"></a>1、安装了docker-io或者docker-ce</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Centos：$ sudo yum <span class="keyword">install</span> docker-ce</span><br><span class="line"> </span><br><span class="line">Ubuntu：$ sudo apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br><span class="line">        $ sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> docker-ce</span><br></pre></td></tr></table></figure><h2 id="2、要有一个vsftpd的docker镜像"><a href="#2、要有一个vsftpd的docker镜像" class="headerlink" title="2、要有一个vsftpd的docker镜像"></a>2、要有一个vsftpd的docker镜像</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1. docker search vsftpd         <span class="comment">#寻找vsftpd的镜像</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#假如我们找到一个最多引用的，叫fauria/vsftpd</span></span><br><span class="line"> </span><br><span class="line">2. docker pull fauria/vsftpd  <span class="comment">#把镜像pull到本地</span></span><br></pre></td></tr></table></figure><h2 id="3、创建vsftpd的container"><a href="#3、创建vsftpd的container" class="headerlink" title="3、创建vsftpd的container"></a>3、创建vsftpd的container</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ docker run -d -p 21:21 -p 20:20 -p 21100-21110:21100-21110 -v /Ftpfile:/home/vsftpd -e FTP_USER=myuser -e FTP_PASS=mypass -e PASV_ADDRESS=192.168.120.88 -e PASV_MIN_PORT=21100 -e PASV_MAX_PORT=21110 <span class="comment">--name vsftpd --restart=always fauria/vsftpd</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#-p进行端口绑定映射</span></span><br><span class="line"><span class="comment"># -v进行文件目录的映射 FTP_UESR 和FTP_PASS如果设定了会在container里面的 </span></span><br><span class="line"><span class="comment">#/etc/vsftpd/virtual_users.txt</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#PASV_MIN_PORT和PASV_MAX_PORT映射的是被动模式下端口使用范围</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#PASV_ADDRESS指的的宿主机地址</span></span><br></pre></td></tr></table></figure><h1 id="二、配置成自己想要的参数"><a href="#二、配置成自己想要的参数" class="headerlink" title="二、配置成自己想要的参数"></a>二、配置成自己想要的参数</h1><h2 id="1、修改、完善vsftpd的设置"><a href="#1、修改、完善vsftpd的设置" class="headerlink" title="1、修改、完善vsftpd的设置"></a>1、修改、完善vsftpd的设置</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1、我们先进入container里面</span></span><br><span class="line"> </span><br><span class="line">docker exec -i -t vsftpd bash </span><br><span class="line"> </span><br><span class="line"><span class="comment">#2、修改并生成虚拟用户模式下的用户db文件</span></span><br><span class="line"> </span><br><span class="line">vi /etc/vsftpd/virtual_users.txt <span class="comment">#编辑配置文件写入用户跟密码</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#假如我们添加了user用户</span></span><br><span class="line"> </span><br><span class="line">mkdir /home/vsftpd/user <span class="comment">#建立新用户文件夹 </span></span><br><span class="line"> </span><br><span class="line">/usr/bin/db_load -T -t hash</span><br><span class="line"> -f /etc/vsftpd/virtual_users.txt /etc/vsftpd/virtual_users.db</span><br><span class="line"> <span class="comment">#把登录的验证信息写入数据库</span></span><br></pre></td></tr></table></figure><h2 id="2、重启container，验证结果"><a href="#2、重启container，验证结果" class="headerlink" title="2、重启container，验证结果"></a>2、重启container，验证结果</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">docker restart vsftpd</span><br><span class="line">或者：</span><br><span class="line">sudo service docker status 查看服务</span><br><span class="line">sudo service docker <span class="keyword">start</span> 启动服务</span><br><span class="line"><span class="keyword">ftp</span>保存位置</span><br><span class="line">/my/<span class="keyword">data</span>/<span class="keyword">directory</span>/myuser/</span><br></pre></td></tr></table></figure><h1 id="三、ftp两种模式介绍"><a href="#三、ftp两种模式介绍" class="headerlink" title="三、ftp两种模式介绍"></a>三、ftp两种模式介绍</h1><h2 id="1、主动模式"><a href="#1、主动模式" class="headerlink" title="1、主动模式"></a>1、主动模式</h2><p>文件传输是客服端建立服务 然后ftp服务端根据这个服务推送文件数据过来</p><h2 id="2、被动模式"><a href="#2、被动模式" class="headerlink" title="2、被动模式"></a>2、被动模式</h2><p>文件传输是ftp服务根据PASV_MIN_PORT~ PASV_MAX_PORT这2个环境变量的范围随机一个ip提供服务给客服端下载</p><h2 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h2><p>根据上面的模式 使用主动模式 客服端如果存在防火墙请把服务端口号开放出来</p><p>使用被动模式 服务端就要把PASV_MIN_PORT~ PASV_MAX_PORT范围的端口开放出来</p><p>如果使用了docker PASV_MIN_PORT~ PASV_MAX_PORT 这个范围的端口请映射成一样的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h1&gt;&lt;h2 id=&quot;1、安装了docker-io或者docker-ce&quot;&gt;&lt;a href=&quot;#1、安装了docker-
      
    
    </summary>
    
    
      <category term="ftp" scheme="http://yoursite.com/categories/ftp/"/>
    
      <category term="环境" scheme="http://yoursite.com/categories/ftp/%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="环境" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83/"/>
    
      <category term="ftp" scheme="http://yoursite.com/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>Linux_前世今生</title>
    <link href="http://yoursite.com/2020/02/22/Linux_%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/"/>
    <id>http://yoursite.com/2020/02/22/Linux_%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</id>
    <published>2020-02-22T10:29:28.000Z</published>
    <updated>2020-02-23T11:48:03.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、-Linux的前世"><a href="#一、-Linux的前世" class="headerlink" title="一、 Linux的前世"></a>一、 Linux的前世</h1><h2 id="1、时间表"><a href="#1、时间表" class="headerlink" title="1、时间表"></a>1、时间表</h2><table><thead><tr><th align="left"><strong>1969年</strong></th><th><strong>Unix诞生于贝尔实验室</strong></th></tr></thead><tbody><tr><td align="left"><strong>1984年</strong></td><td><strong>谭宁邦 Minix开发者 教学</strong></td></tr><tr><td align="left"><strong>1984年</strong></td><td><strong>斯托曼 自由软件（FSF）与GNU项目发起人，GPL（通用公共许可）协议</strong></td></tr><tr><td align="left"><strong>1991年</strong></td><td><strong>Linus Torvalds托瓦兹 linux内核之父</strong></td></tr></tbody></table><h2 id="2、故事梗概"><a href="#2、故事梗概" class="headerlink" title="2、故事梗概"></a>2、故事梗概</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">早在Linux出现之前的二十年（<span class="number">1970</span>年代），就有一个相当稳定而成熟的操作系统了，那就是Linux的前身Unix。</span><br><span class="line"><span class="comment">//linux的核心是由Linus Torvalds（拖瓦尔兹，莱纳斯）在1991年时候开发出来的，放在网络上给大家提供下载，后来大家感觉此物</span></span><br><span class="line">好用而精简。后来相关技术人员就去下载研究他了，那为什么这么多人喜欢她呢，下面慢慢说来。</span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">1969</span>年以前：</span><br><span class="line">早期的计算机并不像现在一样，人手一个，一般是用于科技研究、军事、技术单位等使用，我们很难碰到。</span><br><span class="line"><span class="comment">//造成一个问题就是机器很少人特别多，也许一个大学里面只有一台，但是有N多人都想用。在1960年麻省理工学院发展了“相容分时系统CTSS” 可以让多个终端系统连接大型主机。就是1个服务器连接多个客户端。这仿佛就是多个人同时使用一台计算机，其实其中有cpu分片的功能来完成此任务。</span></span><br><span class="line">如此，终端设备无论在哪只要在终端机前面输入输出作业就可以利用主机提供的功能。终端没有运算能力只管输入输出。一般比较先进的也就提供<span class="number">30</span>个不到的终端</span><br><span class="line">在<span class="number">1965</span>年后，贝尔实验室Bell、麻省理工学院MIT、奇异公司GE，发起了Multics计划，让主机可以达成<span class="number">300</span>个终端。后来因为资金不足、计划进度等问题，就退出研究了。</span><br><span class="line"></span><br><span class="line"><span class="number">1969</span>年：</span><br><span class="line">贝尔研究室退出了Multics计划，但是原计划的人员中有一位Ken Thompson（汤姆森。肯），<span class="number">1969</span>年<span class="number">8</span>月，这哥们趁老婆不在家<span class="comment">//自己用4周时间写了一个核心程序，汤姆森将Multics计划话中的系统简化了，最后叫Unics（还不叫Unix）</span></span><br><span class="line"></span><br><span class="line"><span class="number">1973</span>年：Unix正式诞生</span><br><span class="line">由于汤姆森这个b，写的这个系统是在太好用了，经过贝尔实验室的流传与数次改版，成为如今用C语言写成的Unics核心，也就是Unix。</span><br><span class="line"></span><br><span class="line"><span class="number">1977</span>年：</span><br><span class="line"><span class="comment">//Unix代码使用高级C语言编写，非常具有移植性，只要取得此代码加以更改编写就可以移植到其他的主机上。柏克莱大学bill joy对代码进行修改后命名为Berkeley Software Distribution（BSD）。</span></span><br><span class="line"></span><br><span class="line"><span class="number">1979</span>年：</span><br><span class="line">软件很好用，广为流传，很多公司针对自己的计算机开发自己的版本，<span class="number">1979</span>年时才慢慢转移到家用主机上面</span><br><span class="line"></span><br><span class="line"><span class="number">1984</span>年：GNU计划与FSF基金会</span><br><span class="line">Richard Mathew Stallman（史托曼）在<span class="number">1984</span>年发起GNU计划，计划目的时：建立一个自由、开放的Unix系统。于是他不仅宣传让同事使用此内核程序，自己还开编写C语言的编译器也就是gcc</span><br><span class="line">其中GNU开发的几个重要软件：</span><br><span class="line"><span class="comment">//Emacs 代码编辑器工具</span></span><br><span class="line">GNU C （GCC）</span><br><span class="line">GNU C Library （glibc）</span><br><span class="line">Bash shell</span><br><span class="line">后来的很多软件都可以通过这些基础程序开发。</span><br><span class="line"></span><br><span class="line"><span class="number">1991</span>年芬兰的赫尔辛基大学的<span class="comment">//Linus Torvalds（拖瓦兹，莱纳斯），他使用bash，gcc等工具写了一个内核程序，可以在386机器上运行，从此开始Linux的发展之路。</span></span><br><span class="line">为什么称为GNU？</span><br><span class="line"><span class="comment">//GNU时GNU‘S Not Unix，gnu不是Unix～，在程序中是无限循环意思。</span></span><br><span class="line">什么是open source哪？</span><br><span class="line"><span class="comment">//程序的编写者，将源代码一起公布。</span></span><br><span class="line"></span><br><span class="line">后来很多人觉得这个linux内核很不错，就一起研究。</span><br><span class="line">查看内核命令uname -r</span><br><span class="line"><span class="number">2.6</span><span class="number">.18</span>-<span class="number">92</span>.el5</span><br><span class="line">主版本.次版本.释放出版本-修改版本</span><br><span class="line">主版本为奇数：说明是测试版比如<span class="number">2.5</span>.xx</span><br><span class="line">主版本为偶数：稳定版本如：<span class="number">2.6</span>.xx</span><br><span class="line">所以你对别人说版本时候，要说清楚是内核版本，还是如：linux的redhat6发行版本</span><br><span class="line"></span><br><span class="line">什么是Unix like？</span><br><span class="line"><span class="comment">//不是喜欢，是很像Unix的系统</span></span><br><span class="line">Linux distribution是什么？</span><br><span class="line"><span class="comment">//kernel+Softwares+tools我们称之为Linux distribution，翻译linux发行商软件。</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、现在主流基于linux的系统</span><br><span class="line"><span class="comment">//Debian、centos、Ubuntu、Gentoo、RedHat、Kali Linux、Arch Linux、OpenSuse、Deepin（国产）</span></span><br></pre></td></tr></table></figure><hr><h1 id="二、Linux的今生"><a href="#二、Linux的今生" class="headerlink" title="二、Linux的今生"></a>二、Linux的今生</h1><h2 id="1、Linux是什么"><a href="#1、Linux是什么" class="headerlink" title="1、Linux是什么"></a>1、Linux是什么</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Linux就是个操作系统：它和Windows XP、Windows <span class="number">2003</span>、<span class="number">2008</span>什么的一样就是一个操作系统而已</span><br><span class="line"><span class="number">1.1</span> 那什么又是操作系统呢？</span><br><span class="line">// 操作系统（Operation System, 简称OS）是管理和控制计算机硬件与软件资源的计算机程序，是直接运行在“裸机”上的最基本的系统软件，任何其他软件都必须在操作系统的支持下才能运行。</span><br><span class="line">简单来说，操作系统就是一个程序，这个程序和我们平时使用的程序略有不同，它的作用是帮助我们协调、管理和控制计算机硬件和软件.</span><br></pre></td></tr></table></figure><h2 id="2、Linux能干什么"><a href="#2、Linux能干什么" class="headerlink" title="2、Linux能干什么"></a>2、Linux能干什么</h2><blockquote><p>它能当服务器，服务器上安装者各种企业应用、服务。</p><p>比如：Web服务（apache，就是能架设网站的）、数据库（MySQL，存储网站信息数据的）、博客系统（wordpress） 等……</p></blockquote><h2 id="3、Linux在哪里干"><a href="#3、Linux在哪里干" class="headerlink" title="3、Linux在哪里干"></a>3、Linux在哪里干</h2><blockquote><p>比如某网站的服务器，他们肯定用Linux。再比如某网站的数据库，他们差不多也基于Linux。</p><p>再比如机关部门、学校、东莞夜总会、某中介公司，总之他们都用的到Linux。 因为他们的部分业务需要在网络上处理，需要存储，需要管理数据。那么恰恰Linux就是很好的服务端操作系统</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、-Linux的前世&quot;&gt;&lt;a href=&quot;#一、-Linux的前世&quot; class=&quot;headerlink&quot; title=&quot;一、 Linux的前世&quot;&gt;&lt;/a&gt;一、 Linux的前世&lt;/h1&gt;&lt;h2 id=&quot;1、时间表&quot;&gt;&lt;a href=&quot;#1、时间表&quot; class
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="讲故事" scheme="http://yoursite.com/tags/%E8%AE%B2%E6%95%85%E4%BA%8B/"/>
    
  </entry>
  
</feed>
